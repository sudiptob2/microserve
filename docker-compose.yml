version: "3.8"

services:
  # RabbitMQ
  rabbit:
    hostname: rabbit
    image: rabbitmq:3.10.0-rc.3-management
    env_file: .env
    networks:
      - main
    ports:
      - "127.0.0.1:15672:15672"
    restart: always

  admin-backend:
    image: sudiptob2/microserve-admin
    command: "bash scripts/backend_entrypoint.sh"
    restart: always
    env_file:
      - .env
    ports:
      - "127.0.0.1:8000:8000"
    depends_on:
      - admin-db
      - rabbit

    networks:
      - main

  admin-db:
    image: postgres
    restart: always
    env_file:
      - .env
    volumes:
      - pg-data:/var/lib/postgresql/data
    networks:
      - main

  admin-queue:
    image: sudiptob2/microserve-admin
    env_file:
      - .env
    command: "python -u consumer.py"
    depends_on:
      - admin-db
      - rabbit
    restart: always
    networks:
      - main

  main-backend:
    image: sudiptob2/microserve-main
    env_file:
      - .env
    command: "bash scripts/entrypoint.sh"
    ports:
      - "127.0.0.1:8001:5000"
    depends_on:
      - main-db
      - rabbit
    restart: unless-stopped
    networks:
      - main

  main-queue:
    image: sudiptob2/microserve-main
    env_file:
      - .env
    command: "python -u consumer.py"
    depends_on:
      - main-db
      - rabbit
    restart: always
    networks:
      - main

  main-db:
    image: mysql:5.7.22
    restart: always
    env_file:
      - .env
    volumes:
      - msql-data:/var/lib/mysql
    networks:
      - main

volumes:
  pg-data:
  msql-data:

networks:
  main:
