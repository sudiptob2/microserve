version: "3.8"

services:
  # RabbitMQ
  rabbit:
    hostname: rabbit
    image: rabbitmq:3.10.0-rc.3-management
    env_file: .env
    networks:
      - main
    ports:
      - "127.0.0.1:15672:15672"
    restart: unless-stopped

  admin-backend:
    <<: &admin-backend # Image name is changed in production:
      image: "sudiptob2/microserve-admin-v2:v1.0.7"
      volumes:
        - django-static:/var/www/django/static
        - django-media:/var/www/django/media # serving django's media
      depends_on:
        - admin-db
      networks:
        - main
      env_file: .env
      restart: unless-stopped
      environment:
        DJANGO_DATABASE_HOST: admin-db
    command: /start_dev.sh
    expose:
      - 8000
    ports:
      - "127.0.0.1:8000:8000"
  admin-db:
    image: postgres
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - pg-data:/var/lib/postgresql/data
    networks:
      - main

  admin-redis:
    image: redis:6.0.5
    hostname: redis
    volumes:
      - redis-data:/data
    env_file: .env
    networks:
      - main
    restart: unless-stopped

  admin-redis-commander:
    hostname: redis-commander
    image: rediscommander/redis-commander:latest
    restart: unless-stopped
    environment:
      - REDIS_HOST=redis
    depends_on:
      - "admin-redis"
    networks:
      - main

  admin-consumer:
    <<: *admin-backend
    command: /start_consumer.sh
    restart: unless-stopped

  admin-asgiserver:
    <<: *admin-backend
    command: /start_asgi.sh
    restart: unless-stopped

  admin-celery:
    <<: *admin-backend
    command: /start_celery.sh

  admin-beat:
    <<: *admin-backend
    command: /start_beat.sh
    ports: []
    restart: unless-stopped

  main-backend:
    image: sudiptob2/microserve-main
    env_file:
      - .env
    command: "bash scripts/entrypoint.sh"
    ports:
      - "127.0.0.1:8001:5000"
    depends_on:
      - main-db
      - rabbit
    restart: unless-stopped
    networks:
      - main

  main-queue:
    image: sudiptob2/microserve-main
    env_file:
      - .env
    command: "python -u consumer.py"
    depends_on:
      - main-db
      - rabbit
    restart: unless-stopped
    networks:
      - main

  main-db:
    image: mysql:5.7.22
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - msql-data:/var/lib/mysql
    networks:
      - main

volumes:
  pg-data:
  msql-data:
  redis-data:
  django-static:
  django-media:

networks:
  main:
